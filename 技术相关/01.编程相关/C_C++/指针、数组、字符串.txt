1，在二进制层面上，指针的值就是内存单元的地址，而变量是引用内存单元的值得别名。
    只要我们始终掌握着对象的内存地址，我们就可以在任何地方对其指向的内存单元进行操作。
2，当把“&”用于指针时，就是在提取指针变量的地址，不能在一个指针前面连续使用多个“&',例如”&&p“，因为&p已经不是一个变量了。
3，数组
C/C++都是以行序优先的原则来存储元素的。
int a[10] 等价于 int * const a
int a[3][4]  等价于 int (* const b)[4]
4，C++动态创建和删除数组
int *a = new int[1024];
delete []a;
5，函数指针：函数体的首地址
     函数连接的本质就是把函数地址绑定到函数的调用语句上（实际上就是一个跳转指令）
6，C++引用
int m；
int &n = m;  //n相当于m的别名，n既不是m的拷贝，也不是m的指针，n就是m自己。
引用和指针的区别 1）引用在创建的同时必须初始化。2）不存在NULL引用。3）引用一旦被初始化为指向一个对象，就不能被改变为指向另一个对象。4）引用的创建和销毁并不会调用对象的构造和析构函数。